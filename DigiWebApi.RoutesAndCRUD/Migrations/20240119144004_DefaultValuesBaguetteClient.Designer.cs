// <auto-generated />
using DigiWebApi.RoutesAndCRUD.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigiWebApi.RoutesAndCRUD.Migrations
{
    [DbContext(typeof(BakeryDbContext))]
    [Migration("20240119144004_DefaultValuesBaguetteClient")]
    partial class DefaultValuesBaguetteClient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaguetteClient", b =>
                {
                    b.Property<int>("BaguettesId")
                        .HasColumnType("int");

                    b.Property<int>("ClientsId")
                        .HasColumnType("int");

                    b.HasKey("BaguettesId", "ClientsId");

                    b.HasIndex("ClientsId");

                    b.ToTable("BaguetteClient");

                    b.HasData(
                        new
                        {
                            BaguettesId = 2,
                            ClientsId = 1
                        },
                        new
                        {
                            BaguettesId = 3,
                            ClientsId = 1
                        },
                        new
                        {
                            BaguettesId = 1,
                            ClientsId = 2
                        });
                });

            modelBuilder.Entity("DigiWebApi.RoutesAndCRUD.Models.Baguette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Baguettes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "Euros",
                            Description = "Du pain artisanal à la farine de blé complet.",
                            Name = "Pain complet",
                            Price = 2.5f
                        },
                        new
                        {
                            Id = 2,
                            Currency = "Euros",
                            Description = "Du pain artisanal à la farine blanche et plein de glucose !",
                            Name = "Baguette tradition",
                            Price = 1.2f
                        },
                        new
                        {
                            Id = 3,
                            Currency = "Euros",
                            Description = "Fait majoritairement avec du beurre.",
                            Name = "Brioche",
                            Price = 1.2f
                        },
                        new
                        {
                            Id = 4,
                            Currency = "Euros",
                            Description = "Ça existe au moins ?",
                            Name = "Pain sans gluten",
                            Price = 4.5f
                        },
                        new
                        {
                            Id = 5,
                            Currency = "Euros",
                            Description = "Ça existe au moins ?",
                            Name = "Pain Test",
                            Price = 4.5f
                        });
                });

            modelBuilder.Entity("DigiWebApi.RoutesAndCRUD.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "432 avenue de la Gourmandise",
                            Name = "Marie Madelaine"
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 rue de la Jean-Michelerie",
                            Name = "Jean Michel"
                        });
                });

            modelBuilder.Entity("BaguetteClient", b =>
                {
                    b.HasOne("DigiWebApi.RoutesAndCRUD.Models.Baguette", null)
                        .WithMany()
                        .HasForeignKey("BaguettesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiWebApi.RoutesAndCRUD.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
